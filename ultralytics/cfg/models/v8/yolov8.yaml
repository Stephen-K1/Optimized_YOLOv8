# Ultralytics YOLO üöÄ, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  # m: [1.0, 1.0, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# Êï¥‰∏™yolov8Áî±‰∏Ä‰∏™nn.Sequential()ÊûÑÊàêÔºåÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÁöÑname‰∏∫model.0.conv.weight, 0Ë°®Á§∫‰∏ãÈù¢ÁöÑÁ¨¨0Â±Ç name‰æãÂ≠êÔºömodel.2.cv1.conv.weight, model.22.cv2.0.0.conv.weight
# Âú®for name, param in model.named_parameters()‰∏≠ÔºåÊØè‰∏™nameÁöÑÁªìÂ∞æ‰∏∫‰ª•‰∏ãÊüê‰∏Ä‰∏™Ôºöconv.weight, conv.bias, bn.weight, bn.bias, Âõ†‰∏∫Ê®°ÂûãÁöÑÊúÄÂ∫ïÂ±Ç‰∏∫nn.Conv2d()Êàñnn.BatchNorm2d()
# Ëøô‰∏§‰∏™ÁöÑparamÈÉΩÊòØÁî±.weightÂíå.biasÂæóÂà∞(ËøîÂõûtensor)
# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C2f, [512]]  # 12

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C2f, [256]]  # 15 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 12], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 9], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

  - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5)


# larger body, i.e., larger c2f, 2x c2f: 7.38M, 21.5GFLOPs, 4x c2f: 12.11M, 35.3GFLPs
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#   - [-1, 3, M_C2f, [128, 1, True]]
#   - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#   - [-1, 6, M_C2f, [256, 1, True]]
#   - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#   - [-1, 6, M_C2f, [512, 1, True]]
#   - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#   - [-1, 3, M_C2f, [1024, 1, True]]
#   - [-1, 1, SPPF, [1024, 5]]  # 9

# # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
#   - [-1, 3, M_C2f, [512, 1]]  # 12

#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
#   - [-1, 3, M_C2f, [256, 1]]  # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]]  # cat head P4
#   - [-1, 3, M_C2f, [512, 1]]  # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]]  # cat head P5
#   - [-1, 3, M_C2f, [1024, 1]]  # 21 (P5/32-large)

#   - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5)


# larger head. auxiliary entire head: 7.6M, 28.9GFLOPs, auxiliary 8x head: 4.25M, 22.9GFLOPs
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#   - [-1, 3, C2f, [128, True]]
#   - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#   - [-1, 6, C2f, [256, True]]
#   - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#   - [-1, 6, C2f, [512, True]]
#   - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]]  # 9

# # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
#   - [-1, 3, C2f, [512]]  # 12

#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
#   - [-1, 3, C2f, [256]]  # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]]  # cat head P4
#   - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]]  # cat head P5
#   - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

#   - [[15, 18, 21], 1, M_Detect, [nc]]  # Detect(P3, P4, P5)


# Auxiliary branch 
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#   - [-1, 3, C2f, [128, True]]
#   - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#   - [-1, 6, C2f, [256, True]]
#   - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#   - [-1, 6, C2f, [512, True]]
#   - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]]  # 9

# # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
#   - [-1, 3, C2f, [512]]  # 12

#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
#   - [-1, 3, C2f, [256]]  # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]]  # cat head P4
#   - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]]  # cat head P5
#   - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

#   # auxiliary branch
#   - [-1, 1, b_Conv, [64, 3, 2]]  # 22, b_ConvÊåábegin convÔºåÂõ†‰∏∫ÂºÄÂßãÈÄöÈÅìË¶ÅÊòØ3Ôºå-1ÂæóÂà∞ÁöÑÈÄöÈÅì‰∏çÊòØ3ÔºåÊñ∞Âª∫‰∏Ä‰∏™ËæìÂÖ•ËßÑÂÆöÊòØ3ÁöÑconv
#   - [[-1, 0], 1, Conv, [128, 3, 2]]  # 23
#   - [[-1, 1], 3, C2f, [128, True]]   # 24
#   - [[-1, 2], 1, Conv, [256, 3, 2]]  # 25
#   - [[-1, 3], 6, C2f, [256, True]]   # 26

#   - [[-1, 4]], 3, C2f, [256]]  # 27

#   - [[15, 18, 21, 27], 1, Detect, [nc]]  # Detect(P3, P4, P5)


# Â∞Üc2fÁöÑbottleneckÁöÑkernelÊîπÊàê3Âíå1ÔºåËøôÈáå8xÁöÑneckÁöÑc2f‰ªé256ÊîπÊàê320ÔºåÂèÇÊï∞Èáè‰∏∫2.78MÔºåGFLOPs‰∏∫8.3
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#   - [-1, 3, C2f, [128, True]]
#   - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#   - [-1, 6, C2f, [256, True]]
#   - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#   - [-1, 6, C2f, [512, True]]
#   - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]]  # 9

# # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
#   - [-1, 3, C2f, [512]]  # 12

#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
#   - [-1, 3, C2f, [320]]  # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]]  # cat head P4
#   - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]]  # cat head P5
#   - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

#   - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5)


# change channel of 8x features of backbone from 256 to 288, c2f (layer 12) from 512 to 224, this makes the receptive field of 8x branch more like the ones from backbone (which smaller)
# 3.05M, 8.6GFLOPs
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#   - [-1, 3, C2f, [128, True]]
#   - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#   - [-1, 6, C2f, [288, True]]
#   - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#   - [-1, 6, C2f, [512, True]]
#   - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]]  # 9

# # # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
#   - [-1, 3, C2f, [224]]  # 12

#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
#   - [-1, 3, C2f, [256]]  # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]]  # cat head P4
#   - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]]  # cat head P5
#   - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

#   - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5)


# for UniRepLKNet bakcbone, backbone param: 31M
# scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
#   # [depth, width, max_channels]
#   m: [1.0, 1.0, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
#   l: [1.00, 1.00, 640]
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, downsample_layer, [80, True]]  # 0-P1/2
#   - [-1, 1, stage, [80, [3,3,3]]]  # 1-P2/4
#   - [-1, 1, downsample_layer, [160]]
#   - [-1, 1, stage, [160, [13, 13, 13]]]  # 3-P3/8
#   - [-1, 1, downsample_layer, [320]]
#   - [-1, 1, stage, [320, [13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3]]]  # 5-P4/16
#   - [-1, 1, downsample_layer, [640]]
#   - [-1, 1, stage, [640, [13,13,13]]]  # 7-P5/32
#   - [-1, 1, norm, [640]]
#   - [-1, 1, SPPF, [1024, 5]]  # 9

# # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 5], 1, normConcat, [320 ,1]]  # cat backbone P4
#   - [-1, 3, C2f, [512]]  # 12

#   - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
#   - [[-1, 3], 1, normConcat, [160 ,1]]  # cat backbone P3
#   - [-1, 3, C2f, [256]]  # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]]  # cat head P4
#   - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]]  # cat head P5
#   - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)

#   - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5)
